/*!
 * BnL Charts
 * 
 * D3 charting componentized using Angular directives.
 * 
 * Usage
 * -----
 * HTML:
 * 
 *   <bnl-chart chart-data="chartData" width="1200" height="300">
 *     <bnl-absolute-layout>
 *       <bnl-x-axis chart="chart" x="30" y="275" width="1170" height="25"></bnl-x-axis>
 *       <bnl-y-axis chart="chart" x="30" y="0" width="25" height="275"></bnl-y-axis>
 *       <bnl-area chart="chart" x="30" y="0" width="1170" height="275"></bnl-area>
 *     </bnl-absolute-layout>
 *   </bnl-chart>
 * 
 *   The bnl-chart data is bound via the chart-data attribute.
 *   The bnl-chart renders as an SVG element, so you can set properties on the SVG like width and height.
 *   Choose a layout container for the parts of your chart.  Based on your choice, you can apply different attributes to control layout.
 *   Each part will have a chart attribute that you should bind to chart (e.g. chart="chart").
 *   Ordering parts can be important to layout and z-order of rendering.
 *   
 * Components
 * ----------
 * Modules: 
 *   bnlCharts
 * 
 * Directives:
 *   bnl-chart: Main container for a chart.
 * 
 *   bnl-x-axis: Renders an x axis
 *   bnl-y-axis: Renders a Y axis.
 * 
 *   bnl-area: Renders an area chart for a single series)
 * 
 *   bnl-absolute-layout: Positions children based on their attributes of x, y, width, height.
 *   bnl-docked-layout: Positions children based on the side they are docked (left, top, right, bottom, none).
 * 
 * 
 * Design Considerations
 * ---------------------
 * Scope: 
 *   The chart directive is isolated scope to prevent collision with other charts on the page.
 *   Each child that renders has isolated scope to allow for setting individual scope properties like width and height.
 *    
 * Transclusion:
 *   Containers (chart and layouts) transclude content to avoid requiring chart authors to edit templates.
 *   Transclusion is done manually in the directives to avoid creating an additonal isolated scope. ng-transclude is not in the templates.
 *   Layouts with isolated scopes use the chart's scope for their transcluded content to be invisible to their children.
 *   The call to $transclude is done at the tail of the method because it causes link functions to execute.  
 *   $transclude is called so that controller calls tunnel down the scope hierarchy and link calls bubble up the scope hierarchy.
 * 
 * SVG:
 *   This library avoids nesting SVG elements for grouping and uses the <g> element instead.
 *   A single SVG at the root allows the chart to scale properly; It is vector graphics after all.
 *   D3 renders based on variables in memory and not SVG containers (e.g. axis.range), so width/height containment isn't important.
 *   Browsers handle nested SVG width/height updates for rendering, but the clientWidth, clientHeight, and getBBox() are zeros for a nested SVG in JavaScript.
 */
var bnlCharts=angular.module("bnlCharts",[]);bnlCharts.directive("bnlAbsoluteLayout",[function(){return{controller:["$scope","$element","$attrs","$transclude",function(a,b,c,d){console.log("bnlAbsoluteLayout controller:"+a.$id),d(a.$parent,function(a,c){b.append(a)}),a.$on("bnl-chart-render",function(c,d){console.log("bnlAbsoluteLayout render:"+a.$id);var e=b[0];$.each($(b).children(),function(a,b){var c=$(b),d=c.attr("x")?Number(c.attr("x")):0,f=c.attr("y")?Number(c.attr("y")):0;d3.select(b).attr({transform:"translate("+d+","+f+")"});var g=c.attr("width")?Number(c.attr("width")):e.clientWidth,h=c.attr("height")?Number(c.attr("height")):e.clientHeight,i=angular.element(b).isolateScope();i.width=g,i.height=h})})}],link:function(a,b,c){console.log("bnlAbsoluteLayout link:"+a.$id)},replace:!0,restrict:"E",scope:{},templateNamespace:"svg",template:'<g class="bnl-absolute-layout"></g>',transclude:!0}}]),bnlCharts.directive("bnlArea",[function(){var a=function(a,b,c,d,e,f){var g=d3.svg.area().x(function(a){return b(new Date(a.x))}).y0(e).y1(function(a){return e-c(a.y)}).interpolate("linear"),h=d3.select(a).selectAll(".area").data(f);h.enter().append("path").attr("class","area").attr("d",g(f))};return{link:function(b,c,d){console.log("bnlArea link:"+b.$id),b.$on("bnl-chart-render",function(d,e){console.log("bnlArea render:"+b.$id);var f=c[0];f.ownerSVGElement;a(f,b.chart.xScale,b.chart.yScale,b.width,b.height,b.chart.data)})},replace:!0,restrict:"E",scope:{chart:"="},templateNamespace:"svg",template:"<g></g>"}}]),bnlCharts.directive("bnlChart",["$timeout",function(a){var b=function(a){var b=d3.time.scale();return b.ticks(d3.time.day),b.tickFormat("%a %d"),b.range([0,a]),b},c=function(a){var b=d3.scale.linear().range([a,0]);return b},d=function(a,b){var c=b&&b.length>0?new Date(b[0].x):new Date,d=b&&b.length>0?new Date(b[b.length-1].x):c;c=moment.utc(c),d=moment.utc(d),a.domain([c,d])},e=function(a,b){var c=0,d=0;b&&(c=d3.min(b,function(a){return a.y}),d=d3.max(b,function(a){return a.y})),c=Math.min(0,c),d=Math.max(1,d),a.domain([c,d])};return{controller:["$scope","$element","$attrs","$transclude",function(a,f,g,h){console.log("bnlChart controller:"+a.$id);var i=f[0],j=b(i.clientWidth);d(j,a.chartData);var k=c(i.clientHeight);e(k,a.chartData),a.chart={data:a.chartData,xScale:j,yScale:k},h(a,function(a,b){f.append(a)})}],link:function(b,c,d){console.log("bnlChart link:"+b.$id),a(function(){b.$broadcast("bnl-chart-render")},500)},replace:!0,restrict:"E",scope:{chartData:"="},templateNamespace:"svg",template:"<svg></svg>",transclude:!0}}]),bnlCharts.directive("bnlDockedLayout",[function(){var a=function(a){var b={top:0,right:0,bottom:0,left:0};if(a){var c=a.split(",");switch(c.length){case 1:var d=Number(c[0]);isNaN(d)||(b.top=d,b.right=d,b.bottom=d,b.left=d);break;case 2:var e=Number(c[0]),f=Number(c[1]);isNaN(e)||(b.top=e,b.bottom=e),isNaN(f)||(b.right=f,b.left=f);break;case 3:var g=Number(c[0]),f=Number(c[1]),h=Number(c[2]);isNaN(g)||(b.top=g),isNaN(f)||(b.right=f,b.left=f),isNaN(h)||(b.bottom=h);break;default:if(c.length>=4){var g=Number(c[0]),i=Number(c[1]),h=Number(c[2]),j=Number(c[3]);isNaN(g)||(b.top=g),isNaN(i)||(b.right=i),isNaN(h)||(b.bottom=h),isNaN(j)||(b.left=j)}}}return b};return{controller:["$scope","$element","$attrs","$transclude",function(b,c,d,e){console.log("bnlDockedLayout controller:"+b.$id),e(b.$parent,function(a,b){c.append(a)}),b.$on("bnl-chart-render",function(d,e){console.log("bnlDockedLayout render:"+b.$id);var f=c[0],g=f.ownerSVGElement,h=0,i=0,j=b.width?b.width:g.clientWidth,k=b.height?b.height:g.clientHeight;$.each($(c).children(),function(b,c){var d=$(c),e=d.attr("dock"),f=h,g=i,l=j,m=k;e&&("top"===e?(m=d.attr("height")?Number(d.attr("height")):k,i+=m,k-=m):"right"===e?(l=d.attr("width")?Number(d.attr("width")):j,f=j-l,j-=l):"bottom"===e?(m=d.attr("height")?Number(d.attr("height")):k,g=k-m,k-=m):"left"===e&&(l=d.attr("width")?Number(d.attr("width")):j,h+=l,j-=l));var n=a(d.attr("margin"));g+=n.top,f+=n.left,m-=n.top+n.bottom,l-=n.left+n.right,(0!==f||0!==g)&&d3.select(c).attr({transform:"translate("+f+","+g+")"});var o=angular.element(c).isolateScope();o.width=l,o.height=m})})}],link:function(a,b,c){console.log("bnlDockedLayout link:"+a.$id);var d=b[0];d3.select(d).classed("bnl-docked-layout",!0)},replace:!0,restrict:"E",scope:{},templateNamespace:"svg",template:"<g></g>",transclude:!0}}]),bnlCharts.directive("bnlXAxis",[function(){var a=function(a,b,c,d){b.range([0,c]),xAxis=d3.svg.axis().scale(b).orient("bottom"),d3.select(a).attr("class","x axis").call(xAxis)};return{controller:["$scope",function(a){console.log("bnlXAxis controller:"+a.$id)}],link:function(b,c,d){console.log("bnlXAxis link:"+b.$id),b.$on("bnl-chart-render",function(d,e){console.log("bnlXAxis render:"+b.$id);var f=c[0];f.ownerSVGElement;a(f,b.chart.xScale,b.width,b.height)})},replace:!0,restrict:"E",scope:{chart:"="},templateNamespace:"svg",template:"<g></g>"}}]),bnlCharts.directive("bnlYAxis",[function(){var a=function(a,b,c,d){b.range([d,0]),yAxis=d3.svg.axis().scale(b).orient("left"),x=c,d3.select(a).select(".y-axis").attr({transform:"translate("+x+",0)"}).call(yAxis)};return{controller:["$scope",function(a){console.log("bnlYAxis controller:"+a.$id)}],link:function(b,c,d){console.log("bnlYAxis link:"+b.$id),b.$on("bnl-chart-render",function(d,e){console.log("bnlYAxis render:"+b.$id);var f=c[0];f.ownerSVGElement;a(f,b.chart.yScale,b.width,b.height)})},replace:!0,restrict:"E",scope:{chart:"="},templateNamespace:"svg",template:'<g><g class="y-axis axis"></g></g>'}}]);